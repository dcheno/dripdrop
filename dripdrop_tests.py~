import unittest
import pickle

from tracker import Tracker, TrackerEvent
from client import Client

class TrackerTests(unittest.TestCase):
    def setUp(self):
        c = Client('test.torrent')
        self.t = Tracker(c.tor_announce, c.tor_info)
        with open('saved_init_response.p', 'rb') as f:
            self.start_response = pickle.load(f)

    def test_handle_response(self):
        attempt = self.t._handle_response(TrackerEvent.STARTED, self.start_response)
        print(attempt)
        self.assertEqual(t.interval, 1800, 'Bad Interval')
        self.assertEqual(t.min_interval, 1800, 'Bad Min Interval')

        complete = attempt['complete']
        self.assertEqual(complete, 14, 'Bad Complete')
        incomplete = attempt['incomplete']
        self.assertEqual(incomplete, 8, 'Bad Incomplete')
        peers = attempt['peers']
        self.assertEqual(len(peers), 15, 'Bad Peer Count')
        self.assertEqual(len(peers[1][0]), 4)
        self.assertEqual(len(peers[1][1]), 2)

if __name__ == '__main__':
    unittest.main()
    
        
